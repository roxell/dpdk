Index: dpdk/lib/librte_vhost/vhost_user/fd_man.c
===================================================================
--- dpdk.orig/lib/librte_vhost/vhost_user/fd_man.c
+++ dpdk/lib/librte_vhost/vhost_user/fd_man.c
@@ -71,20 +71,22 @@ fdset_find_free_slot(struct fdset *pfdse
 	return fdset_find_fd(pfdset, -1);
 }
 
-static void
+static int
 fdset_add_fd(struct fdset  *pfdset, int idx, int fd,
 	fd_cb rcb, fd_cb wcb, void *dat)
 {
 	struct fdentry *pfdentry;
 
-	if (pfdset == NULL || idx >= MAX_FDS)
-		return;
+	if (pfdset == NULL || idx >= MAX_FDS || fd >= FD_SETSIZE)
+		return -1;
 
 	pfdentry = &pfdset->fd[idx];
 	pfdentry->fd = fd;
 	pfdentry->rcb = rcb;
 	pfdentry->wcb = wcb;
 	pfdentry->dat = dat;
+
+	return 0;
 }
 
 /**
@@ -150,12 +152,11 @@ fdset_add(struct fdset *pfdset, int fd,
 
 	/* Find a free slot in the list. */
 	i = fdset_find_free_slot(pfdset);
-	if (i == -1) {
+	if (i == -1 || fdset_add_fd(pfdset, i, fd, rcb, wcb, dat) < 0) {
 		pthread_mutex_unlock(&pfdset->fd_mutex);
 		return -2;
 	}
 
-	fdset_add_fd(pfdset, i, fd, rcb, wcb, dat);
 	pfdset->num++;
 
 	pthread_mutex_unlock(&pfdset->fd_mutex);
Index: dpdk/lib/librte_vhost/vhost_user/vhost-net-user.c
===================================================================
--- dpdk.orig/lib/librte_vhost/vhost_user/vhost-net-user.c
+++ dpdk/lib/librte_vhost/vhost_user/vhost-net-user.c
@@ -288,6 +288,7 @@ vserver_new_vq_conn(int fd, void *dat, _
 	int fh;
 	struct vhost_device_ctx vdev_ctx = { (pid_t)0, 0 };
 	unsigned int size;
+	int ret;
 
 	conn_fd = accept(fd, NULL, NULL);
 	RTE_LOG(INFO, VHOST_CONFIG,
@@ -317,8 +318,15 @@ vserver_new_vq_conn(int fd, void *dat, _
 
 	ctx->vserver = vserver;
 	ctx->fh = fh;
-	fdset_add(&g_vhost_server.fdset,
+	ret = fdset_add(&g_vhost_server.fdset,
 		conn_fd, vserver_message_handler, NULL, ctx);
+	if (ret < 0) {
+		free(ctx);
+		close(conn_fd);
+		RTE_LOG(ERR, VHOST_CONFIG,
+				"failed to add fd %d into vhost server fdset\n",
+				conn_fd);
+	}
 }
 
 /* callback when there is message on the connfd */
@@ -447,6 +455,7 @@ int
 rte_vhost_driver_register(const char *path)
 {
 	struct vhost_server *vserver;
+	int ret;
 
 	pthread_mutex_lock(&g_vhost_server.server_mutex);
 	if (ops == NULL)
@@ -474,8 +483,18 @@ rte_vhost_driver_register(const char *pa
 
 	vserver->path = strdup(path);
 
-	fdset_add(&g_vhost_server.fdset, vserver->listenfd,
+	ret = fdset_add(&g_vhost_server.fdset, vserver->listenfd,
 		vserver_new_vq_conn, NULL, vserver);
+	if (ret < 0) {
+		pthread_mutex_unlock(&g_vhost_server.server_mutex);
+		RTE_LOG(ERR, VHOST_CONFIG,
+				"failed to add listen fd %d to vhost server fdset\n",
+				vserver->listenfd);
+		close(vserver->listenfd);
+		free(vserver->path);
+		free(vserver);
+		return -1;
+	}
 
 	g_vhost_server.server[g_vhost_server.vserver_cnt++] = vserver;
 	pthread_mutex_unlock(&g_vhost_server.server_mutex);
