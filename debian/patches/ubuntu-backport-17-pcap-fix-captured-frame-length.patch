Description: backport of dpdk 16.04-rc1 fix for LP: #1559981

Forwarded: n/a (already upstream)
Author: Christian Ehrhardt <christian.ehrhardt@canonical.com>
Last-Update: 2016-03-20

From c6fb0e55585206a89f6db396de860e6e844cad06 Mon Sep 17 00:00:00 2001
From: Dror Birkman <dror.birkman@lightcyber.com>
Date: Thu, 28 Jan 2016 13:09:50 +0200
Subject: [PATCH] pcap: fix captured frame length
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

The actual captured length is header.caplen, whereas header.len is
the original length on the wire.

Fixes: 4c173302c307 ("pcap: add new driver")

Signed-off-by: Dror Birkman <dror.birkman@lightcyber.com>
Acked-by: NicolaÃÅs Pernas Maradei <nicolas.pernas.maradei@emutex.com>
---
 drivers/net/pcap/rte_eth_pcap.c | 12 ++++++------
 1 file changed, 6 insertions(+), 6 deletions(-)

diff --git a/drivers/net/pcap/rte_eth_pcap.c b/drivers/net/pcap/rte_eth_pcap.c
index f9230eb..1d121f8 100644
--- a/drivers/net/pcap/rte_eth_pcap.c
+++ b/drivers/net/pcap/rte_eth_pcap.c
@@ -220,25 +220,25 @@ eth_pcap_rx(void *queue,
 		buf_size = (uint16_t)(rte_pktmbuf_data_room_size(pcap_q->mb_pool) -
 				RTE_PKTMBUF_HEADROOM);
 
-		if (header.len <= buf_size) {
+		if (header.caplen <= buf_size) {
 			/* pcap packet will fit in the mbuf, go ahead and copy */
 			rte_memcpy(rte_pktmbuf_mtod(mbuf, void *), packet,
-					header.len);
-			mbuf->data_len = (uint16_t)header.len;
+					header.caplen);
+			mbuf->data_len = (uint16_t)header.caplen;
 		} else {
 			/* Try read jumbo frame into multi mbufs. */
 			if (unlikely(eth_pcap_rx_jumbo(pcap_q->mb_pool,
 						       mbuf,
 						       packet,
-						       header.len) == -1))
+						       header.caplen) == -1))
 				break;
 		}
 
-		mbuf->pkt_len = (uint16_t)header.len;
+		mbuf->pkt_len = (uint16_t)header.caplen;
 		mbuf->port = pcap_q->in_port;
 		bufs[num_rx] = mbuf;
 		num_rx++;
-		rx_bytes += header.len;
+		rx_bytes += header.caplen;
 	}
 	pcap_q->rx_pkts += num_rx;
 	pcap_q->rx_bytes += rx_bytes;
-- 
2.7.3

